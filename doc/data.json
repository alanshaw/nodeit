{
    "project": {
        "name": "nodeit",
        "description": "NodeJS text editor",
        "version": "0.1.0",
        "url": ""
    },
    "files": {
        "lib/plugin/font-size.js": {
            "name": "lib/plugin/font-size.js",
            "modules": {},
            "classes": {
                "FontSizePlugin": 1,
                "font-size": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/util/codemirror.js": {
            "name": "lib/util/codemirror.js",
            "modules": {},
            "classes": {
                "codemirror": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/bridge.js": {
            "name": "lib/bridge.js",
            "modules": {},
            "classes": {
                "bridge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/nodeit.js": {
            "name": "lib/nodeit.js",
            "modules": {},
            "classes": {
                "Nodeit": 1,
                "nodeit (module)": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "FontSizePlugin": {
            "name": "FontSizePlugin",
            "shortname": "FontSizePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plugin/font-size.js",
            "line": 4,
            "is_constructor": 1,
            "params": [
                {
                    "name": "nodeit",
                    "description": "",
                    "type": "Nodeit"
                }
            ]
        },
        "font-size": {
            "name": "font-size",
            "shortname": "font-size",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plugin/font-size.js",
            "line": 101,
            "static": 1
        },
        "codemirror": {
            "name": "codemirror",
            "shortname": "codemirror",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/util/codemirror.js",
            "line": 1,
            "description": "CodeMirror utilities",
            "static": 1
        },
        "bridge": {
            "name": "bridge",
            "shortname": "bridge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/bridge.js",
            "line": 3,
            "description": "A noop bridge that simply logs calls to the console.\nCan be used as a reference to what methods must be implemented by a container",
            "static": 1
        },
        "Nodeit": {
            "name": "Nodeit",
            "shortname": "Nodeit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/nodeit.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "nodeit (module)": {
            "name": "nodeit (module)",
            "shortname": "nodeit (module)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/nodeit.js",
            "line": 557,
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "lib/plugin/font-size.js",
            "line": 26,
            "description": "Change the font size of the current document",
            "itemtype": "method",
            "name": "changeSize",
            "params": [
                {
                    "name": "size",
                    "description": "New font size in px",
                    "type": "Int"
                }
            ],
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 49,
            "description": "Increase font size of current document",
            "itemtype": "method",
            "name": "increase",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 57,
            "description": "Decrease font size of current document",
            "itemtype": "method",
            "name": "decrease",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 65,
            "description": "Reset font size of current document",
            "itemtype": "method",
            "name": "reset",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 73,
            "access": "private",
            "tagname": "",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 80,
            "access": "private",
            "tagname": "",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 87,
            "access": "private",
            "tagname": "",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 94,
            "access": "private",
            "tagname": "",
            "class": "FontSizePlugin"
        },
        {
            "file": "lib/plugin/font-size.js",
            "line": 106,
            "description": "Create and return a new FontSizePlugin instance",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "nodeit",
                    "description": "",
                    "type": "Nodeit"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "font-size"
        },
        {
            "file": "lib/util/codemirror.js",
            "line": 10,
            "description": "Get a CodeMirror mode from a file path",
            "itemtype": "method",
            "name": "pathToMode",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "codemirror"
        },
        {
            "file": "lib/util/codemirror.js",
            "line": 44,
            "description": "Load a CodeMirror mode",
            "itemtype": "method",
            "name": "loadMode",
            "async": 1,
            "params": [
                {
                    "name": "mode",
                    "description": "The mode to load",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback on completion",
                    "type": "Function"
                }
            ],
            "class": "codemirror"
        },
        {
            "file": "lib/bridge.js",
            "line": 10,
            "description": "Log to the container's console",
            "itemtype": "method",
            "name": "log",
            "class": "bridge"
        },
        {
            "file": "lib/bridge.js",
            "line": 16,
            "description": "Signal to the bridge that nodeit is ready",
            "itemtype": "method",
            "name": "ready",
            "class": "bridge"
        },
        {
            "file": "lib/bridge.js",
            "line": 24,
            "description": "Save a file to disk",
            "itemtype": "method",
            "name": "save",
            "async": 1,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "class": "bridge"
        },
        {
            "file": "lib/bridge.js",
            "line": 39,
            "description": "Open a file and retrieve contents. If no path, prompt the user to choose a file to open",
            "itemtype": "method",
            "name": "open",
            "async": 1,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "bridge"
        },
        {
            "file": "lib/bridge.js",
            "line": 53,
            "description": "Called by nodeit when a file is closed. Return an error in the callback to cancel.",
            "itemtype": "method",
            "name": "close",
            "async": 1,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "bridge"
        },
        {
            "file": "lib/nodeit.js",
            "line": 66,
            "description": "When nodeit is ready",
            "itemtype": "event",
            "name": "ready",
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 70,
            "description": "When a new document is opened",
            "itemtype": "event",
            "name": "docNew",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "CodeMirror.Doc"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 75,
            "description": "When a document is opened",
            "itemtype": "event",
            "name": "docOpen",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "CodeMirror.Doc"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 80,
            "description": "When a document is saved to disk, or whatever",
            "itemtype": "event",
            "name": "docSave",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "CodeMirror.Doc"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 85,
            "description": "When a document is closed",
            "itemtype": "event",
            "name": "docClose",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "CodeMirror.Doc"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 90,
            "description": "When the current document is swapped for another",
            "itemtype": "event",
            "name": "docSwap",
            "params": [
                {
                    "name": "doc",
                    "description": "The newly current document",
                    "type": "CodeMirror.Doc"
                },
                {
                    "name": "prev",
                    "description": "The previously current document",
                    "type": "CodeMirror.Doc"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 98,
            "description": "Set the nodeit bridge object",
            "itemtype": "method",
            "name": "setBridge",
            "params": [
                {
                    "name": "bridge",
                    "description": ""
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 107,
            "description": "Log a message to the bridge",
            "itemtype": "method",
            "name": "log",
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 115,
            "description": "Get the number of open docs",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 124,
            "description": "Retrieve the CodeMirror editor instance",
            "itemtype": "method",
            "name": "getEditor",
            "return": {
                "description": "",
                "type": "CodeMirror"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 133,
            "description": "Create a new file",
            "itemtype": "method",
            "name": "neu",
            "async": 1,
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 169,
            "description": "Open a file",
            "itemtype": "method",
            "name": "open",
            "async": 1,
            "params": [
                {
                    "name": "path",
                    "description": "Path to file. If no path, prompt the user to choose a file to open",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 229,
            "description": "Save the passed document to disk, or whatever. If no document passed, default to current document.",
            "itemtype": "method",
            "name": "save",
            "async": 1,
            "params": [
                {
                    "name": "doc",
                    "description": "Document to save",
                    "type": "CodeMirror.Doc",
                    "optional": true
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 281,
            "description": "Close the passed document, prompting for save if changed. If no document passed, default to current document.",
            "itemtype": "method",
            "name": "close",
            "async": 1,
            "params": [
                {
                    "name": "doc",
                    "description": "Document to close",
                    "type": "CodeMirror.Doc",
                    "optional": true
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 341,
            "description": "Close all open documents",
            "itemtype": "method",
            "name": "closeAll",
            "async": 1,
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 365,
            "description": "Find an open CodeMirror document by ID",
            "itemtype": "method",
            "name": "findDocById",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "CodeMirror.Doc"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 380,
            "description": "Find an open CodeMirror document by path",
            "itemtype": "method",
            "name": "findDocByPath",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "CodeMirror.Doc"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 395,
            "description": "Given a document, find it's tab",
            "itemtype": "method",
            "name": "findTabByDoc",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "CodeMirror.Doc"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 414,
            "itemtype": "method",
            "name": "onTabChange",
            "access": "private",
            "tagname": "",
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 456,
            "itemtype": "method",
            "name": "onDocChange",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "doc",
                    "description": ""
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 466,
            "access": "private",
            "tagname": "",
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 473,
            "description": "Register a plugin with nodeit. Nodeit will call a function called \"create\" or \"init\" on the passed plugin object\n(if either exists) passing them the nodeit instance and a callback function. The plugin MUST call the callback \nfunction when it has completed creating the instance or initialising the instance.",
            "itemtype": "method",
            "name": "plugin",
            "async": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Unique identifier for the plugin",
                    "type": "String"
                },
                {
                    "name": "plugin",
                    "description": "The plugin instance (with init method) OR module (with create method)",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Success/failure callback",
                    "type": "Function"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 521,
            "description": "Get a plugin instance by ID",
            "itemtype": "method",
            "name": "getPlugin",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 530,
            "description": "Convert a file path to a human readable title suitable for showing on a tab, for instance",
            "itemtype": "method",
            "name": "pathToTitle",
            "satic": "",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Nodeit"
        },
        {
            "file": "lib/nodeit.js",
            "line": 562,
            "description": "Create and return a new Nodeit instance",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Nodeit"
            },
            "class": "nodeit (module)"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/util/codemirror.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:115"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:365"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:380"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:395"
        },
        {
            "message": "unknown tag: satic",
            "line": " lib/nodeit.js:530"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:530"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/nodeit.js:562"
        },
        {
            "message": "Missing item type",
            "line": " lib/plugin/font-size.js:73"
        },
        {
            "message": "Missing item type",
            "line": " lib/plugin/font-size.js:80"
        },
        {
            "message": "Missing item type",
            "line": " lib/plugin/font-size.js:87"
        },
        {
            "message": "Missing item type",
            "line": " lib/plugin/font-size.js:94"
        },
        {
            "message": "Missing item type",
            "line": " lib/nodeit.js:466"
        }
    ]
}